 title Signal
author arrogant.gamer
homepage www.arrogantgamer.com
debug
========
OBJECTS
========

Background
white #EEEEEE
00100
00100
11111
00100
00100

Player
white #222222 red
11111
10001
10201
10001
11111

pinkdrone ( can be remote controlled )
white #222222 pink
11111
10001
10201
10001
11111

greendrone ( can be remote controlled by drones)
white #222222 green
11111
10001
10201
10001
11111

A_1
#222222 white
00000
01100
01000
000.0
00000

A_2
#222222 white
00000
00110
00010
0.000
00000

A_3
#222222 white
00000
0.000
00010
00110
00000

A_4
#222222 white
00000
000.0
01000
01100
00000

C_1
#222222 white
00000
00.00
00000
01010
00000

C_2
#222222 white
00000
01000
000.0
01000
00000

C_3
#222222 white
00000
01010
00000
00.00
00000

C_4
#222222 white
00000
00010
0.000
00010
00000

B_1
white #EEEEEE #AA0000
00100
00100
11111
00120
00100

B_2
white #EEEEEE #AA0000
00100
00100
11111
02100
00100

B_3
white #EEEEEE #AA0000
00100
02100
11111
00100
00100

B_4
white #EEEEEE #AA0000
00100
00120
11111
00100
00100



nullified ( greyed out )
white #222222 darkgrey
11111
10001
10201
10001
11111

neutralized ( trapped by neighbour cells TODO )
white #222222 green
11111
10001
10201
10001
11111

Wall
#222222
00000
00000
00000
00000
00000

mesh
white #EEEEEE pink
02102
20120
11211
02102
20120

green
green
00000
00000
00000
00000
00000

pink
pink
00000
00000
00000
00000
00000

=======
LEGEND
=======

. = Background

3 = A_1
1 = A_2
7 = A_3
9 = A_4

w = C_1 and green
a = C_4 and green
s = C_3 and green
d = C_2 and green

8 = C_1 and pink
6 = C_2 and pink
2 = C_3 and pink
4 = C_4 and pink

reddrone = player
drone = reddrone or greendrone

p = reddrone
c = pinkdrone
x = greendrone

actor = p or c or x

n = nullified
g = neutralized

m = mesh
I = Wall

! = B_1 and Background
@ = B_2 and Background
# = B_3 and Background
$ = B_4 and Background

( for the reprogramming level )

` = A_1 and B_1
' = A_2 and B_2
" = A_3 and B_3
, = A_1 and B_4

R = A_1 or A_2 or A_3 or A_4
B = B_1 or B_2 or B_3 or B_4

=======
SOUNDS
=======

================
COLLISIONLAYERS
================

Background
green, pink
B_1, B_2, B_3, B_4, mesh
player, nullified, neutralized, actor, A_1, A_2, A_3, A_4, Wall, C_1, C_2, C_3, C_4

======
RULES
======

( a player might cause a pink drone to move )

UP      [ > player | 8 ] [ stationary pinkdrone ] -> [ > player | 8 ] [ > pinkdrone ] again
LEFT    [ > player | 4 ] [ stationary pinkdrone ] -> [ > player | 4 ] [ > pinkdrone ] again
DOWN    [ > player | 2 ] [ stationary pinkdrone ] -> [ > player | 2 ] [ > pinkdrone ] again
RIGHT   [ > player | 6 ] [ stationary pinkdrone ] -> [ > player | 6 ] [ > pinkdrone ] again

( a player might cause a pink drone to move )

UP      [ > player | w ] [ stationary greendrone ] -> [ > player | w ] [ > greendrone ] again
LEFT    [ > player | a ] [ stationary greendrone ] -> [ > player | a ] [ > greendrone ] again
DOWN    [ > player | s ] [ stationary greendrone ] -> [ > player | s ] [ > greendrone ] again
RIGHT   [ > player | d ] [ stationary greendrone ] -> [ > player | d ] [ > greendrone ] again

( a pinkdrone might cause a green drone to move )

UP      [ > pinkdrone | w ] [ stationary greendrone ] -> [ > pinkdrone | w ] [ > greendrone ] again
LEFT    [ > pinkdrone | a ] [ stationary greendrone ] -> [ > pinkdrone | a ] [ > greendrone ] again
DOWN    [ > pinkdrone | s ] [ stationary greendrone ] -> [ > pinkdrone | s ] [ > greendrone ] again
RIGHT   [ > pinkdrone | d ] [ stationary greendrone ] -> [ > pinkdrone | d ] [ > greendrone ] again

( a greendrone might cause a pink drone to move )

UP      [ > greendrone | 8 ] [ stationary pinkdrone ] -> [ > greendrone | 8 ] [ > pinkdrone ] again
LEFT    [ > greendrone | 4 ] [ stationary pinkdrone ] -> [ > greendrone | 4 ] [ > pinkdrone ] again
DOWN    [ > greendrone | 2 ] [ stationary pinkdrone ] -> [ > greendrone | 2 ] [ > pinkdrone ] again
RIGHT   [ > greendrone | 6 ] [ stationary pinkdrone ] -> [ > greendrone | 6 ] [ > pinkdrone ] again

( no passing through mesh )

[ > actor | mesh ] -> cancel

( A arrows are pushable, but not when they are against walls )

[ > actor | R | no n no I ] -> [ > actor | > R | no n no I ]

( if player is surrounded, transfer action to drone )
[ C_4 | action actor | C_2 ] [ actor ] -> [ C_4 | action actor | C_2 ] [ action actor ] again

( mark squares as "wanting to rotate" )

[ action actor | A_1 ] -> [ action actor | action A_1 ]
[ action actor | A_2 ] -> [ action actor | action A_2 ] 
[ action actor | A_3 ] -> [ action actor | action A_3 ]
[ action actor | A_4 ] -> [ action actor | action A_4 ]

( rotate squares that want to rotate )

[ action A_4 ] -> [ A_1 ]
[ action A_1 ] -> [ A_2 ]
[ action A_2 ] -> [ A_3 ]
[ action A_3 ] -> [ A_4 ]

( when pushing a square, push all similar squares )

[ > A_4 ] [ A_4 ] -> [ > A_4 ] [ > A_4 ]
[ > A_1 ] [ A_1 ] -> [ > A_1 ] [ > A_1 ]
[ > A_2 ] [ A_2 ] -> [ > A_2 ] [ > A_2 ]
[ > A_3 ] [ A_3 ] -> [ > A_3 ] [ > A_3 ]

==============
WINCONDITIONS
==============

all A_1 on B_1
all A_2 on B_2
all A_3 on B_3
all A_4 on B_4

=======
LEVELS
=======

